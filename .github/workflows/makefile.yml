name: Deploy Proto & NPM publish

on:
  pull_request_target:
    types: [opened, edited, synchronize]
    branches: [ master ]

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
  NPM_VERSION: patch


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source repository
      uses: actions/checkout@v3.0.0
      with:
        ref: master
        repository: playerfury/fanx
        path: fanx

    - name: Checkout destination repository
      uses: actions/checkout@v3.0.0
      with:     
        ref: master
        repository: ${{ secrets.ST_REPO }}/fanxjs
        path: fanxjs
        token: ${{ secrets.ST_TOKEN }}
        
    - name: Copy Proto Files
      run: |
        cp -r fanx/proto/fanx fanxjs/proto
        git -C fanxjs add .
        git -C fanxjs status
        git -C fanxjs config user.email "action@github.com"
        git -C fanxjs config user.name "GitHub Action"
        git -C fanxjs commit --allow-empty -am "Proto Deployment [skip ci]"
        
    - name: Npm Install
      run: |
        echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" > fanxjs/.npmrc      
        npm install --prefix fanxjs
        git -C fanxjs checkout .
        
    - name: Delete src/codegen and types
      run: |
        rm -rf fanxjs/src/codegen
        rm -rf fanxjs/types
        
    - name: Npm Run Codegen
      run: |
        npm run codegen --prefix fanxjs
 
    - name: Commit changes
      run: |
        git -C fanxjs add .     
        git -C fanxjs config user.email "action@github.com"
        git -C fanxjs config user.name "GitHub Action"
        git -C fanxjs commit --allow-empty -am "Codegen Deployment [skip ci]"
        
    - name: Determine NPM version
      run: |
        cd fanxjs      
        if [[ "${{ github.event.pull_request.title }}" == *"major"* ]]; then
          echo "NPM_VERSION=major" >> $GITHUB_ENV
        elif [[ "${{ github.event.pull_request.title }}" == *"minor"* ]]; then
          echo "NPM_VERSION=minor" >> $GITHUB_ENV
        elif [[ "${{ github.event.pull_request.title }}" == *"patch"* ]]; then
          echo "NPM_VERSION=patch" >> $GITHUB_ENV
        fi
        
    - name: Bump NPM version
      run: |
        cd fanxjs          
        git status
        if [ "${{ env.NPM_VERSION }}" == "major" ]; then
          npm version major
        elif [ "${{ env.NPM_VERSION }}" == "minor" ]; then
          npm version minor
        elif [ "${{ env.NPM_VERSION }}" == "patch" ]; then
          npm version patch
        fi
        git status
        
    - name: Push fanxjs
      run: git -C fanxjs push        
        
    - name: Publish NPM Package
      run: |
        echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" > fanxjs/.npmrc
        cat fanxjs/.npmrc
        cd fanxjs
        ls -la
        npm publish --access=restricted --force
